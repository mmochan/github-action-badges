name: Scan

on: [push, pull_request]
env:
  BUILDER_IMAGE_NAME: opendatacube/geobase:builder
  RUNNER_IMAGE_NAME: opendatacube/geobase:runner
  WHEELS_IMAGE_NAME: opendatacube/geobase:wheels
jobs:
  cve-scanner:
    runs-on: ubuntu-latest
    steps:
      - name: pull the builder image
        id: builder_docker_pull
        run: |
          docker pull "${{ env.BUILDER_IMAGE_NAME }}"

      - name: Run vulnerability scanner
        if: github.event_name != 'release'
        uses: aquasecurity/trivy-action@0.0.8
        id: builder_github_scan
        with:
          image-ref: "${{ env.BUILDER_IMAGE_NAME }}"
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Run vulnerability scanner
        if: github.event_name != 'release'
        uses: aquasecurity/trivy-action@0.0.8
        id: builder_trivy_scan
        with:
          image-ref: "${{ env.BUILDER_IMAGE_NAME }}"
          format: "table"
          exit-code: "1"
          severity: "CRITICAL,HIGH"

      - name: Notify Slack for Failures
        uses: rtCamp/action-slack-notify@v2.1.0
        if: failure()
        id: builder_slack
        env:
          SLACK_CHANNEL: ga-wms-ops
          SLACK_ICON: "https://github.com/docker.png?size=48"
          SLACK_COLOR: "#482de1"
          SLACK_MESSAGE: GEOBASE Builder Scan failure
          SLACK_TITLE: CVE Scan alert
          SLACK_USERNAME: GEOBASE Builder Scan
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}


      # - name: pull the runner image
      #   id: runner_docker_pull
      #   run: |
      #     docker pull "${{ env.RUNNER_IMAGE_NAME }}"

      # - name: Run vulnerability scanner
      #   if: github.event_name != 'release'
      #   uses: aquasecurity/trivy-action@0.0.8
      #   continue-on-error: true
      #   id: runner_scan
      #   with:
      #     image-ref: "${{ env.RUNNER_IMAGE_NAME }}"
      #     format: "table"
      #     exit-code: "1"
      #     severity: "CRITICAL,HIGH"

      # - name: Notify Slack for Failures
      #   uses: rtCamp/action-slack-notify@v2.1.0
      #   if: steps.runner.outcome != 'success'
      #   id: runner_slack
      #   env:
      #     SLACK_CHANNEL: ga-wms-ops
      #     SLACK_ICON: "https://github.com/docker.png?size=48"
      #     SLACK_COLOR: "#482de1"
      #     SLACK_MESSAGE: Geobase Runner Scan failure
      #     SLACK_TITLE: CVE Scan alert
      #     SLACK_USERNAME: GEOBASE Runner Scan
      #     SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}


      # - name: pull the wheels image
      #   id: wheels_docker_pull
      #   run: |
      #     docker pull "${{ env.WHEELS_IMAGE_NAME }}"

      # - name: Run vulnerability scanner
      #   if: github.event_name != 'release'
      #   uses: aquasecurity/trivy-action@0.0.8
      #   continue-on-error: true
      #   id: wheels_scan
      #   with:
      #     image-ref: "${{ env.WHEELS_IMAGE_NAME }}"
      #     format: "table"
      #     exit-code: "1"
      #     severity: "CRITICAL,HIGH"

      # - name: Notify Slack for Failures
      #   uses: rtCamp/action-slack-notify@v2.1.0
      #   if: steps.runner.outcome != 'success'
      #   id: wheels_slack
      #   env:
      #     SLACK_CHANNEL: ga-wms-ops
      #     SLACK_ICON: "https://github.com/docker.png?size=48"
      #     SLACK_COLOR: "#482de1"
      #     SLACK_MESSAGE: Geobase Wheels Scan failure
      #     SLACK_TITLE: CVE Scan alert
      #     SLACK_USERNAME: GEOBASE Wheels Scan
      #     SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

      # - name: steps
      #   id: steps_id
      #   env:
      #     STEPS_CONTEXT: ${{ toJson(steps) }}
      #   run: echo "$STEPS_CONTEXT"

      # - name: Check on failures
      #   if: steps.runner.outcome != 'success'
      #   run: exit 1


# name: Scan

# on: [push, pull_request]

# jobs:
#   vuln-scan:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Run vulnerability scanner
#         uses: aquasecurity/trivy-action@0.0.8
#         continue-on-error: true
#         id: runner
#         with:
#           image-ref: opendatacube/ows:1.8.2-89-g995e340
#           format: "template"
#           template: '@/contrib/gitlab.tpl'
#           output: 'trivy-results.json'
#           severity: "CRITICAL,HIGH"

#       - name: Read trivy-results
#         id: package
#         uses: juliangruber/read-file-action@v1
#         with:
#           path: ./trivy-results.json

#       - name: Notify Slack for Failures
#         uses: rtCamp/action-slack-notify@v2.1.2
#         if: steps.runner.outcome != 'success'
#         id: slack
#         env:
#           SLACK_CHANNEL: ga-wms-ops
#           SLACK_ICON: "https://github.com/docker.png?size=48"
#           SLACK_COLOR: "#482de1"
#           SLACK_MESSAGE: ${{join(steps.package.outputs.content, '\n')}}
#           SLACK_TITLE: CVE Scan alert
#           SLACK_USERNAME: datacube-ows scanner
#           SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

#       - name: steps
#         id: steps_id
#         env:
#           STEPS_CONTEXT: ${{ toJson(steps) }}
#         run: echo "$STEPS_CONTEXT"

#       - name: Check on failures
#         if: steps.runner.outcome != 'success'
#         run: exit 1

#       # - name: Run vulnerability scanner
#       #   uses: aquasecurity/trivy-action@0.0.8
#       #   continue-on-error: true
#       #   with:
#       #     image-ref: opendatacube/ows:1.8.2-89-g995e340
#       #     format: 'template'
#       #     template: '@/contrib/sarif.tpl'
#       #     output: 'trivy-results.sarif'
#       #     exit-code: "1"
#       #     severity: "CRITICAL,HIGH"

#       # - name: Upload Trivy scan results to GitHub Security tab
#       #   uses: github/codeql-action/upload-sarif@v1
#       #   with:
#       #     sarif_file: 'trivy-results.sarif'

#       # - name: Notify Slack for Failures
#       #   uses: rtCamp/action-slack-notify@v2.1.0
#       #   # if: failure()
#       #   env:
#       #     SLACK_CHANNEL: ga-wms-ops
#       #     SLACK_ICON: "https://github.com/docker.png?size=48"
#       #     SLACK_COLOR: "#482de1"
#       #     SLACK_MESSAGE: ""
#       #     SLACK_TITLE: CVE Scan alert
#       #     SLACK_USERNAME: datacube-ows scanner
#       #     SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}


# name: Scan

# on: [push, pull_request]
# env:
#   RUNNER_IMAGE_NAME: opendatacube/geobase:runner
# jobs:
#   cve-scanner:
#     runs-on: ubuntu-latest
#     steps:
#       - name: pull the images
#         id: docker_pull
#         run: |
#           docker pull "${{ env.RUNNER_IMAGE_NAME }}"

#       - name: Run vulnerability scanner
#         if: github.event_name != 'release'
#         uses: aquasecurity/trivy-action@0.0.8
#         continue-on-error: true
#         id: runner
#         with:
#           image-ref: "${{ env.RUNNER_IMAGE_NAME }}"
#           format: "template"
#           template: '@/contrib/gitlab.tpl'
#           output: 'trivy-results.json'
#           severity: "CRITICAL,HIGH"

#       - name: Read trivy-results
#         id: package
#         uses: juliangruber/read-file-action@v1
#         with:
#           path: ./trivy-results.json

#       - name: Notify Slack for Failures
#         uses: rtCamp/action-slack-notify@v2.1.0
#         if: steps.runner.outcome != 'success'
#         id: slack
#         env:
#           SLACK_CHANNEL: ga-wms-ops
#           SLACK_ICON: "https://github.com/docker.png?size=48"
#           SLACK_COLOR: "#482de1"
#           SLACK_MESSAGE: ${{join(steps.package.outputs.content, '\n')}}
#           SLACK_TITLE: CVE Scan alert
#           SLACK_USERNAME: GEOBASE Scanner
#           SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

#       - name: steps
#         id: steps_id
#         env:
#           STEPS_CONTEXT: ${{ toJson(steps) }}
#         run: echo "$STEPS_CONTEXT"

#       - name: Check on failures
#         if: steps.runner.outcome != 'success'
#         run: exit 1
