name: Scan

on: [push, pull_request]

jobs:
  vuln-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Run vulnerability scanner
        uses: aquasecurity/trivy-action@0.0.8
        continue-on-error: true
        with:
          image-ref: "geoscienceaustralia/sandbox:latest"
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          severity: "CRITICAL,HIGH"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: 'trivy-results.sarif'

# env:
#   RUNNER_IMAGE_NAME: opendatacube/geobase:runner
# jobs:
#   cve-scanner:
#     runs-on: ubuntu-latest
#     steps:
#       - name: pull the images
#         id: docker_pull
#         run: |
#           docker pull "${{ env.RUNNER_IMAGE_NAME }}"

#       - name: Run vulnerability scanner
#         if: github.event_name != 'release'
#         uses: aquasecurity/trivy-action@0.0.8
#         continue-on-error: true
#         id: runner
#         with:
#           image-ref: "${{ env.RUNNER_IMAGE_NAME }}"
#           format: "template"
#           template: '@/contrib/gitlab.tpl'
#           output: 'trivy-results.json'
#           severity: "CRITICAL,HIGH"

#       - name: Read trivy-results
#         id: package
#         uses: juliangruber/read-file-action@v1
#         with:
#           path: ./trivy-results.json

#       - name: Notify Slack for Failures
#         uses: rtCamp/action-slack-notify@v2.1.0
#         if: steps.runner.outcome != 'success'
#         id: slack
#         env:
#           SLACK_CHANNEL: ga-wms-ops
#           SLACK_ICON: "https://github.com/docker.png?size=48"
#           SLACK_COLOR: "#482de1"
#           SLACK_MESSAGE: ${{join(steps.package.outputs.content, '\n')}}
#           SLACK_TITLE: CVE Scan alert
#           SLACK_USERNAME: GEOBASE Scanner
#           SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

#       - name: steps
#         id: steps_id
#         env:
#           STEPS_CONTEXT: ${{ toJson(steps) }}
#         run: echo "$STEPS_CONTEXT"

#       - name: Check on failures
#         if: steps.runner.outcome != 'success'
#         run: exit 1
